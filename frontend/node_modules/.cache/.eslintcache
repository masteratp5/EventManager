[{"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\index.js":"1","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\App.js":"2","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Login.js":"3","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Sidebar.js":"4","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Register.js":"5","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\CardAC.js":"6","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\ViewClubEvents.js":"7","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\ViewClubAnnouncements.js":"8","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Settings.js":"9","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Signout.js":"10","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\ViewClubs.js":"11","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\SidebarData.js":"12","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\AddClub.js":"13","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\EventMaker.js":"14","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\Backdrop.js":"15","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\CreateClub.js":"16","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\AnnouncementMaker.js":"17","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\PromoteGenMember.js":"18","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Service\\AuthService.js":"19","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Profile.js":"20","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Deleter.js":"21","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\ProfileEdit.js":"22"},{"size":213,"mtime":1697488880118,"results":"23","hashOfConfig":"24"},{"size":1703,"mtime":1705455966189,"results":"25","hashOfConfig":"24"},{"size":3510,"mtime":1705452287489,"results":"26","hashOfConfig":"24"},{"size":2246,"mtime":1705454541070,"results":"27","hashOfConfig":"24"},{"size":3077,"mtime":1705375187011,"results":"28","hashOfConfig":"24"},{"size":1132,"mtime":1697612123164,"results":"29","hashOfConfig":"24"},{"size":4350,"mtime":1697500684147,"results":"30","hashOfConfig":"24"},{"size":2961,"mtime":1697500677072,"results":"31","hashOfConfig":"24"},{"size":487,"mtime":1705437518639,"results":"32","hashOfConfig":"24"},{"size":572,"mtime":1702944495266,"results":"33","hashOfConfig":"24"},{"size":3312,"mtime":1697500669245,"results":"34","hashOfConfig":"24"},{"size":834,"mtime":1699394445468,"results":"35","hashOfConfig":"24"},{"size":1305,"mtime":1697573230093,"results":"36","hashOfConfig":"24"},{"size":4738,"mtime":1697500396808,"results":"37","hashOfConfig":"24"},{"size":123,"mtime":1638176788000,"results":"38","hashOfConfig":"24"},{"size":2157,"mtime":1697500588000,"results":"39","hashOfConfig":"24"},{"size":1882,"mtime":1697500403796,"results":"40","hashOfConfig":"24"},{"size":1766,"mtime":1697500604158,"results":"41","hashOfConfig":"24"},{"size":636,"mtime":1705376299436,"results":"42","hashOfConfig":"24"},{"size":484,"mtime":1699395551294,"results":"43","hashOfConfig":"24"},{"size":2030,"mtime":1705437454349,"results":"44","hashOfConfig":"24"},{"size":2639,"mtime":1705457172769,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"13wknv6",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\index.js",[],["102","103"],"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\App.js",["104","105","106"],"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Login.js",["107","108","109"],"import React, { useEffect,useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getUser, getToken, setUserSession, resetUserSession } from './Service/AuthService';\r\n\r\nconst loginURL = \"https://xhetcinp85.execute-api.us-west-1.amazonaws.com/prod/login\";\r\nconst verifyTokenAPIURL = \"https://xhetcinp85.execute-api.us-west-1.amazonaws.com/prod/verify\";\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [isAuthenticating, setAuthenticating] = useState(true);\r\n  const token = getToken();\r\n\r\n  //check for existing session\r\n  useEffect(() => {\r\n    if (!token) {\r\n      setAuthenticating(false);\r\n    }\r\n\r\n    const requestConfig = {\r\n      headers: {\r\n        'x-api-key': 'n4mlBUgJbT3YSFHliX5tTeakXeB760x9GrdrVJIi',\r\n      },\r\n    };\r\n    const requestBody = {\r\n      user: getUser(),\r\n      token: token,\r\n    };\r\n\r\n    axios\r\n      .post(verifyTokenAPIURL, requestBody, requestConfig)\r\n      .then((response) => {\r\n        setUserSession(response.data.user, response.data.token);\r\n        alert(\"Session still exists.\");\r\n        navigate(\"/home\");\r\n      })\r\n      .catch((error) => {\r\n        resetUserSession();\r\n        alert(error.message);\r\n      })\r\n      .finally(() => {\r\n        setAuthenticating(false);\r\n      });\r\n  }, []);\r\n\r\n  if (isAuthenticating) {\r\n    return <div className=\"content\">Authenticating...</div>;\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    if (username.trim() === '' || password.trim() === '') {\r\n      setError('All fields are required');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const requestConfig = {\r\n      headers: {\r\n        'x-api-key': 'n4mlBUgJbT3YSFHliX5tTeakXeB760x9GrdrVJIi'\r\n      }\r\n    }\r\n\r\n    const requestBody = {\r\n      username: username,\r\n      password: password\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(loginURL, requestBody, requestConfig);\r\n      setUserSession(response.data.user, response.data.token);\r\n      navigate(\"/home/ac\");\r\n    } catch (error) {\r\n      setError('Invalid username or password');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const goRegister = () => {\r\n    navigate(\"/register\");\r\n  };\r\n\r\n  return (\r\n    <div className='card'>\r\n      <div>\r\n        Welcome to Event Manager!\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"username\">Username: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          placeholder=\"Enter a username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            placeholder=\"Enter a password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        {error && <div style={{ color: 'red' }}>{error}</div>}\r\n        <button className='btn btn--alt' type=\"submit\" disabled={loading}>\r\n          {loading ? 'Logging in...' : 'Login'}\r\n        </button>\r\n        <button className='btn btn--alt' onClick={goRegister}>Register Now</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Sidebar.js",["110"],"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Register.js",["111"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nconst registerURL = \"https://xhetcinp85.execute-api.us-west-1.amazonaws.com/prod/register\"\r\n\r\nfunction Register(){\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // send form to server to create account\r\n  const handleSubmit = async e =>{\r\n    e.preventDefault();\r\n    if (name.trim() === '' || username.trim() === '' || password.trim() === '' || email.trim() === '' || userId.trim() === ''){\r\n      alert('All fields are required');\r\n      return;\r\n    }\r\n    const requestConfig = {\r\n      headers: {\r\n        'x-api-key': 'n4mlBUgJbT3YSFHliX5tTeakXeB760x9GrdrVJIi'\r\n      }\r\n    }\r\n    const requestBody = {\r\n      name: name,\r\n      username: username,\r\n      password: password,\r\n      email: email,\r\n      userId: userId\r\n    }\r\n    axios.post(registerURL, requestBody, requestConfig).then(response => {\r\n      alert(\"Regsitration successful! Please log into your new account.\")\r\n        navigate(\"/\");\r\n    }).catch(error => {\r\n      alert(error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div>\r\n        <p>Create Account</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            placeholder=\"enter your name\"\r\n            onChange={({ target }) => setName(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"username\">Username: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            placeholder=\"enter your username\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={password}\r\n            placeholder=\"enter your password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={email}\r\n            placeholder=\"enter your email\"\r\n            onChange={({ target }) => setEmail(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"userId\">ID: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={userId}\r\n            placeholder=\"enter your ID\"\r\n            onChange={({ target }) => setUserId(target.value)}\r\n            />\r\n        </div>\r\n        <button className='btn btn--alt' type =\"submit\">Enter</button>\r\n      </form>\r\n      <button className='btn btn--alt' onClick = {() => navigate(-1)}>Go Back</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\CardAC.js",[],"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\ViewClubEvents.js",["112","113","114","115","116"],"import {useParams, useNavigate} from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport EventMaker from './Component2/EventMaker';\nimport Backdrop from './Component2/Backdrop';\n\n\nexport const ViewClubEvents = () => {\n  let navigate = useNavigate();\n  let {clubID} = useParams();\n  //club's event parameters\n  const [events, setEvents] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [limit, setLimit] = useState(\"\");\n\n\n  useEffect(() => {\n    async function getEvents(){\n      axios.get(\"/event\", {\n        params:{\n          user_id: JSON.parse(localStorage.getItem(\"user\")),\n          club_id: clubID,\n          filter: filter,\n          limit: limit\n        }\n      }).then((response) => {\n        if (response.data.error == \"\") setEvents(response.data.event_list);\n        else alert(\"Error: \" + response.data.error);\n      }).catch (error => {\n        alert(error);\n        navigate(-1);\n      });\n    };\n    getEvents();\n  }, [])\n\n  function handleJoinStatus(event){\n    async function handleHelper(callEvent){\n      axios.put(\"/event\", {\n        params:{\n          user_id: JSON.parse(localStorage.getItem(\"user\")),\n          club_id: clubID,\n          event_id: callEvent.data.event_id\n        }\n      }).then ((response) => {\n        if(response.data.error == \"\"){\n          if(response.data.added == true) {\n            alert(\"Event: \" + callEvent.data.event_id + \" was successfully subscribed to!\");\n          }\n          else if (response.data[0].removed == true){\n            alert(\"Event: \" + callEvent.data.event_id + \" was successfully removed from subscription!\");\n          }\n        }\n        else alert(\"Error: \" + response.data.error)\n      }).catch (error => alert(error));\n    }\n    handleHelper(event);\n  }\n\n  // used to create an event\n  const[eventMakerOpen, setEventMakerOpen] = useState(false);\n  function openEventMaker(){\n    setEventMakerOpen(true);\n  }\n  function closeEventMaker(){\n    setEventMakerOpen(false);\n  }\n\n  return (\n    <div>\n        <div className = \"card\">\n          <button className='btn btn--alt'onClick={() => navigate(-1)}>Go Back</button>\n        </div>\n        <div className = \"card\">\n          <form>\n            <label htmlFor=\"filter\">Search by name: </label>\n            <input\n              type=\"text\"\n              value={filter}\n              placeholder=\"search club by name\"\n              onChange={({ target }) => setFilter(target.value)}\n              />\n            <button type =\"submit\">Enter</button>\n          </form>\n        </div>\n        <div className = \"card\" >\n          <form>\n            <label htmlFor=\"limit\">Change viewing limit: </label>\n            <input\n              type=\"text\"\n              value={limit}\n              placeholder=\"change the viewing limit\"\n              onChange={({ target }) => setLimit(target.value)}\n              />\n            <button type =\"submit\">Enter</button>\n          </form>\n        </div>\n        <div className = \"card\">\n          <p>{clubID}'s Events:</p>\n          <div className='actions'>\n            <button className='btn' onClick={openEventMaker}>Create an Event</button>\n          </div>\n        </div>\n        {eventMakerOpen && <EventMaker onCancel={closeEventMaker}/>}\n        {eventMakerOpen && <Backdrop onCancel={closeEventMaker}/>}\n        <div>\n          {events.map((event) => (\n          <div className = \"card\">\n            <p>{event.title} (@{event.event_id})</p>\n            <p>Organized By {event.club_id}</p>\n            <p>Planned Date: {event.planned_date}</p>\n            <p>Event Created: {event.date_generated}</p>\n            <p>Capacity: {event.num_attending}/{event.event_capacity}</p>\n            <div>\n              <div>\n                Description\n              </div>\n              <div>\n                {event.description}\n              </div>\n            </div>\n            <div>\n              <div>\n                People Involved\n              </div>\n              <div>\n                {event.people_involved.map((person) => (\n                  <p>{person}</p>\n                ))}\n              </div>\n            </div>\n            <button className='btn' onClick={() => handleJoinStatus(event)}>Mark Event</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewClubEvents;\n","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\ViewClubAnnouncements.js",["117","118"],"import {useParams, useNavigate} from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AnnouncementMaker from './Component2/AnnouncementMaker';\nimport Backdrop from './Component2/Backdrop';\n\n\nexport const ViewClubAnnouncements = () => {\n  let navigate = useNavigate();\n  let {clubID} = useParams();\n  //club's event parameters\n  const [annos, setAnnos] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [limit, setLimit] = useState(\"\");\n\n\n  useEffect(() => {\n    async function getEvents(){\n      axios.get(\"/announcement\", {\n        params:{\n          user_id: JSON.parse(localStorage.getItem(\"user\")),\n          club_id: clubID,\n          filter: filter,\n          limit: limit\n        }\n      }).then((response) => {\n        if (response.data.error == \"\") setAnnos(response.data.announcements_list);\n        else alert(\"Error: \" + response.data.error);\n      }).catch (error => {\n        alert(error);\n        navigate(-1);\n      });\n    };\n    getEvents();\n  }, [])\n\n  // used to create an event\n  const[annoMakerOpen, setAnnoMakerOpen] = useState(false);\n  function openAnnoMaker(){\n    setAnnoMakerOpen(true);\n  }\n  function closeAnnoMaker(){\n    setAnnoMakerOpen(false);\n  }\n\n  return (\n    <div>\n        <div className = \"card\">\n          <button className='btn btn--alt'onClick={() => navigate(-1)}>Go Back</button>\n        </div>\n        <div className = \"card\">\n          <form>\n            <label htmlFor=\"filter\">Search by name: </label>\n            <input\n              type=\"text\"\n              value={filter}\n              placeholder=\"search club by name\"\n              onChange={({ target }) => setFilter(target.value)}\n              />\n            <button type =\"submit\">Enter</button>\n          </form>\n        </div>\n        <div className = \"card\">\n          <form>\n            <label htmlFor=\"limit\">Change viewing limit: </label>\n            <input\n              type=\"text\"\n              value={limit}\n              placeholder=\"change the viewing limit\"\n              onChange={({ target }) => setLimit(target.value)}\n              />\n            <button type =\"submit\">Enter</button>\n          </form>\n        </div>\n        <div className = \"card\">\n          <p>{clubID}'s Announcements:</p>\n          <div className='actions'>\n            <button className='btn' onClick={openAnnoMaker}>Create an Announcement</button>\n          </div>\n        </div>\n        {annoMakerOpen && <AnnouncementMaker onCancel={closeAnnoMaker}/>}\n        {annoMakerOpen && <Backdrop onCancel={closeAnnoMaker}/>}\n        <div>\n          {annos.map((anno) => (\n            <div className = \"card\">\n              <p>Title: \"{anno.title}\" ID:{anno.announcement_id}</p>\n              <p>(From {anno.club_id} @ {anno.date_generated})</p>\n              <p> {anno.description} </p>\n            </div>\n          ))}\n        </div>\n    </div>\n  );\n};\n\nexport default ViewClubAnnouncements;\n","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Settings.js",[],"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Signout.js",[],"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\ViewClubs.js",["119","120"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport PromoteGenMember from './Component2/PromoteGenMember';\r\nimport Backdrop from './Component2/Backdrop';\r\n\r\nexport const ViewClubs = () => {\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [clubArr, setClubArr] = useState([]);\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function getClubs(){\r\n      axios.get(\"/club\", {\r\n        data:{\r\n          user_id: JSON.parse(localStorage.getItem(\"user\")),\r\n          filter: filter\r\n        }\r\n      }).then((response) => {\r\n        if (response.data.error == \"\") {\r\n          setClubArr(response.data.club_list);\r\n        }\r\n        else {  // display error, then go to previous page\r\n          alert(\"Error: \" + response.data.error);\r\n          navigate(-1);\r\n        }\r\n      }).catch(error => {\r\n        alert(error);\r\n      })\r\n    }\r\n    getClubs();\r\n  })\r\n\r\n  // navigate to view events of particular club\r\n  function goClubEvents(club) {\r\n    navigate(club.club_id + \"/events\");\r\n  }\r\n\r\n  // navigate to view events of particular club\r\n  function goClubAnnouncements(club) {\r\n    navigate(club.club_id + \"/announcements\");\r\n  }\r\n\r\n  const handleSelect = (e) => {\r\n    setFilter(e.target.value);\r\n  }\r\n\r\n  // used for promoting a general member -> board member\r\n  const [promoteMemOpen, setPromoteMemOpen] = useState(false);\r\n  function openPromoteMem(){\r\n    setPromoteMemOpen(true);\r\n  }\r\n  function closePromoteMem(){\r\n    setPromoteMemOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className =\"card\">\r\n        <form>\r\n          <label htmlFor=\"filter\">Search by name: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={filter}\r\n            placeholder=\"search club by name\"\r\n          onChange={({ target }) => setFilter(target.value)}\r\n          />\r\n          <button type =\"submit\">Enter</button>\r\n        </form>\r\n      </div>\r\n      {clubArr.map((club) => (\r\n        <div className = \"card\">\r\n          {club.name} (@{club.club_id})\r\n          <div>\r\n            <button className='btn btn--alt' onClick={() => goClubEvents(club)}> View Events </button>\r\n            <button className='btn btn--alt' onClick={() => goClubAnnouncements(club)}> View Announcements </button>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Description\r\n            </div>\r\n            <div>\r\n              {club.description}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              Board Members\r\n            </div>\r\n            <div>\r\n              {club.board_members.map(member => <p>{member}</p>)}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              General Members\r\n            </div>\r\n            <div>\r\n              {club.general_members.map(member => <p>{member}</p>)}\r\n            </div>\r\n            <div className ='actions'>\r\n              <button className='btn' onClick={openPromoteMem}>Promote Member</button>\r\n            </div>\r\n            {promoteMemOpen && <PromoteGenMember onCancel={closePromoteMem}/>}\r\n            {promoteMemOpen && <Backdrop onCancel={closePromoteMem}/>}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewClubs;\r\n","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\SidebarData.js",[],"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\AddClub.js",["121","122"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nfunction AddClub(props){\r\n  const [clubID, setClubID] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const handleSubmit = async e =>{\r\n    e.preventDefault();\r\n    axios.post(\"/clubmembers\", {\r\n      params:{\r\n        user_id: JSON.parse(localStorage.getItem(\"user\")),\r\n        club_id: clubID\r\n      }\r\n    }).then((response) => {\r\n      if (response.data.error == \"\") {\r\n        alert(\"Club was successfully joined!\");\r\n        navigate(\"/home/ac\")\r\n      }\r\n      else alert(\"Error: \" + response.data.error);\r\n    }).catch(error => {\r\n      alert(error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div>\r\n        <p>Add Club</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"clubID\">Enter the club ID: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={clubID}\r\n          placeholder=\"enter your club ID\"\r\n          onChange={({ target }) => setClubID(target.value)}\r\n        />\r\n        <button className='btn btn--alt' type =\"submit\">Enter</button>\r\n      </form>\r\n      <button className='btn btn--alt' onClick={props.onCancel}>Go Back</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddClub;\r\n","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\EventMaker.js",["123","124"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction EventMaker(props){\r\n  let navigate = useNavigate();\r\n  let {clubID} = useParams();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [capacity, setCapacity] = useState(\"\");\r\n  const [plannedDate, setPlannedDate] = useState(\"\");\r\n  // used to help formate plannedDate\r\n  const [dateYear, setDateYear] = useState(\"\");\r\n  const [dateMonth, setDateMonth] = useState(\"\");\r\n  const [dateDay, setDateDay] = useState(\"\");\r\n  const [dateHour, setDateHour] = useState(\"\");\r\n  const [dateMinute, setDateMinute] = useState(\"\");\r\n  const [dateSecond, setDateSecond] = useState(\"\");\r\n\r\n  const handleSubmit = async e =>{\r\n    e.preventDefault();\r\n    setPlannedDate(dateYear+\"-\"+dateMonth+\"-\"+dateDay+\"T\"+dateHour+\":\"+dateMinute+\":\"+dateSecond);\r\n    axios.post(\"http://localhost:3001/clubs\", {\r\n      user_id: JSON.parse(localStorage.getItem(\"user\")),\r\n      club_id: clubID,\r\n      title: title,\r\n      description: desc,\r\n      event_capacity: capacity,\r\n      planned_date: plannedDate,\r\n    }).then ((response) => {\r\n      if (response.data.error == \"\") {\r\n        alert(\"Event \" + title + \" was successful!\");\r\n        navigate(\"/clubs/\" + clubID + \"/events\");\r\n      }\r\n      else (alert(\"Error: \" + response.data.error));\r\n    }).catch (error => {\r\n      alert(error);\r\n      navigate(\"/clubs/\" + clubID + \"/events\");\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div>\r\n        <p>Create Event for {clubID}</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Event Title: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            placeholder=\"enter the event title\"\r\n            onChange={({ target }) => setTitle(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n        <label htmlFor=\"eventDesc\">Event Description: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={desc}\r\n          placeholder=\"enter your event description\"\r\n          onChange={({ target }) => setDesc(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"capacity\">Capacity: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={capacity}\r\n            placeholder=\"enter the max capacity\"\r\n            onChange={({ target }) => setCapacity(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateCalendar\">Planned Calendar Date</label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateYear\">Year: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateYear}\r\n            placeholder=\"enter the year: (YYYY)\"\r\n            onChange={({ target }) => setDateYear(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateMonth\">Month: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateMonth}\r\n            placeholder=\"enter the month: (MM)\"\r\n            onChange={({ target }) => setDateMonth(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateDay\">Day: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateDay}\r\n            placeholder=\"enter the day: (DD)\"\r\n            onChange={({ target }) => setDateDay(target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"dateCalendar\">Planned Time Date</label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateHour\">Hour: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateHour}\r\n            placeholder=\"enter the hour (use 24-hour system): (HH)\"\r\n            onChange={({ target }) => setDateHour(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateMinute\">Minute: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateMinute}\r\n            placeholder=\"enter the minute: (MM)\"\r\n            onChange={({ target }) => setDateMinute(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateSecond\">Second: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateSecond}\r\n            placeholder=\"enter the second: (SS)\"\r\n            onChange={({ target }) => setDateSecond(target.value)}\r\n          />\r\n        </div>\r\n        <button className='btn btn--alt' type =\"submit\">Enter</button>\r\n      </form>\r\n      <button className='btn btn--alt' onClick={props.onCancel}>Go Back</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventMaker;\r\n","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\Backdrop.js",[],"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\CreateClub.js",["125","126"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from 'react-router-dom';\r\n\r\nfunction CreateClub(props){\r\n  const [clubName, setClubName] = useState(\"\");\r\n  const [boardCode, setBoardCode] = useState(\"\");\r\n  const [clubDesc, setClubDesc] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async e =>{\r\n    e.preventDefault();\r\n    axios.post(\"/clubs\", {\r\n      params: {\r\n        user_id: JSON.stringify(localStorage.getItem(\"user\")),\r\n        club_name: clubName,\r\n        board_code: boardCode,\r\n        description: clubDesc,\r\n      }\r\n    }).then((response) => {\r\n      if(response.error == \"\") {\r\n        alert(\"Club creation successful!\");\r\n        navigate(\"/home/vclubs/\" + response.data.club_id);\r\n      }\r\n      else alert(\"Error: \" + response.data.error);\r\n    }).catch(error => {\r\n      alert(error);\r\n      navigate(-1);\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div>\r\n        <p>Create Club</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"clubName\">Club Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={clubName}\r\n            placeholder=\"enter your club's name\"\r\n            onChange={({ target }) => setClubName(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n        <label htmlFor=\"boardCode\">Board Code: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={boardCode}\r\n          placeholder=\"enter your board's code\"\r\n          onChange={({ target }) => setBoardCode(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n        <label htmlFor=\"clubDesc\">Club Description: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={clubDesc}\r\n          placeholder=\"enter your club's description\"\r\n          onChange={({ target }) => setClubDesc(target.value)}\r\n          />\r\n        </div>\r\n        <button className='btn btn--alt' type =\"submit\">Enter</button>\r\n      </form>\r\n      <button className='btn btn--alt' onClick={props.onCancel}>Go Back</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateClub;\r\n","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\AnnouncementMaker.js",["127","128"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {useNavigate} from 'react-router-dom';\nimport {useParams} from \"react-router-dom\";\n\nfunction AnnouncementMaker(props){\n  let navigate = useNavigate();\n  let {clubID} = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n\n  const handleSubmit = async e =>{\n    e.preventDefault();\n    axios.post(\"http://localhost:3001/clubs\", {\n      user_id: JSON.parse(localStorage.getItem(\"user\")),\n      club_id: clubID,\n      title: title,\n      description: desc,\n    }).then ((response) => {\n      if (response.data.error == \"\") {\n        alert(\"Announcement \" + title + \" was successful!\");\n        navigate(\"/clubs/\" + clubID + \"/announcements\");\n      }\n      else (alert(\"Error: \" + response.data.error));\n    }).catch (error => {\n      alert(error);\n      navigate(\"/clubs/\" + clubID + \"/announcements\");\n    });\n  };\n\n\n  return (\n    <div className='modal'>\n      <div>\n        <p>Create Announcement for {clubID}</p>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            value={title}\n            placeholder=\"enter the announcement title\"\n            onChange={({ target }) => setTitle(target.value)}\n            />\n        </div>\n        <div>\n        <label htmlFor=\"announcementDescription\">Description: </label>\n        <input\n          type=\"text\"\n          value={desc}\n          placeholder=\"enter your announcement description\"\n          onChange={({ target }) => setDesc(target.value)}\n          />\n        </div>\n        <button className='btn btn--alt' type =\"submit\">Enter</button>\n      </form>\n      <button className='btn btn--alt' onClick={props.onCancel}>Go Back</button>\n\n    </div>\n  );\n}\n\nexport default AnnouncementMaker;\n","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Component2\\PromoteGenMember.js",["129","130"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {useNavigate} from 'react-router-dom';\nimport {useParams} from \"react-router-dom\";\n\nfunction PromoteGenMember(props){\n  let {clubID} = useParams();\n  const [userID, setUserID] = useState(\"\");\n  const [boardCode, setBoardCode] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async e =>{\n    e.preventDefault();\n    axios.put(\"/clubmembers\", {\n      params:{\n        user_id: userID,\n        club_id: clubID,\n        board_code: boardCode\n      }\n    }).then((response) => {\n      if (response.data.error == \"\") {\n        alert(userID + \" was successfully promoted to a board member!\");\n        navigate(\"/home/clubs/:clubID\")\n      }\n      else alert(\"Error: \" + response.data.error);\n    }).catch(error => {\n      alert(error);\n      navigate(-1);\n    });\n  };\n\n  return (\n    <div className='modal'>\n      <div>\n        <p>Promote a General Member to Board Member</p>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"userID\">Enter the person's ID to promote: </label>\n        <input\n          type=\"text\"\n          value={clubID}\n          placeholder=\"enter the person's ID\"\n          onChange={({ target }) => setUserID(target.value)}\n        />\n        <label htmlFor=\"userID\">Enter the board code of {clubID} for authroization: </label>\n        <input\n          type=\"text\"\n          value={boardCode}\n          placeholder=\"enter the board code\"\n          onChange={({ target }) => setBoardCode(target.value)}\n        />\n        <button type =\"submit\">Promote Member</button>\n      </form>\n      <button className='btn btn--alt' onClick={props.onCancel}>Go Back</button>\n    </div>\n  );\n}\n\nexport default PromoteGenMember;\n","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Service\\AuthService.js",[],"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Profile.js",[],"C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\Deleter.js",["131"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getUser, resetUserSession } from \"./Service/AuthService\";\r\n\r\nconst deleteURL = \"https://xhetcinp85.execute-api.us-west-1.amazonaws.com/prod/delete\";\r\n\r\nconst Deleter = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const username = getUser().username;\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password.trim() === \"\") {\r\n      alert(\"All fields are required\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    const requestConfig = {\r\n      headers: {\r\n        \"x-api-key\": \"n4mlBUgJbT3YSFHliX5tTeakXeB760x9GrdrVJIi\",\r\n      },\r\n    };\r\n\r\n    const requestBody = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.delete(deleteURL, {\r\n        data: requestBody,\r\n        headers: requestConfig.headers,\r\n      });\r\n\r\n      alert(\"Account deletion successful!\");\r\n      resetUserSession();\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      alert(error.message || \"An error occurred\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div>\r\n        <p>Delete Account Verification</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            placeholder=\"Enter your password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn--alt\" type=\"submit\" disabled={loading}>\r\n          {loading ? \"Processing...\" : \"Delete Account\"}\r\n        </button>\r\n      </form>\r\n      <button className=\"btn btn--alt\" onClick={() => navigate(-1)}>\r\n        Go Back\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Deleter;","C:\\Users\\Alvin\\OneDrive\\Documents\\CodeProjects\\EventManagerReact\\frontend\\src\\Component\\ProfileEdit.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"140","line":1,"column":28,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"141","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":13},{"ruleId":"136","severity":1,"message":"142","line":10,"column":10,"nodeType":"138","messageId":"139","endLine":10,"endColumn":15},{"ruleId":"136","severity":1,"message":"143","line":10,"column":17,"nodeType":"138","messageId":"139","endLine":10,"endColumn":25},{"ruleId":"144","severity":1,"message":"145","line":49,"column":6,"nodeType":"146","endLine":49,"endColumn":8,"suggestions":"147"},{"ruleId":"144","severity":1,"message":"145","line":46,"column":6,"nodeType":"146","endLine":46,"endColumn":8,"suggestions":"148"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":27,"column":33,"nodeType":"151","messageId":"152","endLine":27,"endColumn":35},{"ruleId":"144","severity":1,"message":"153","line":35,"column":6,"nodeType":"146","endLine":35,"endColumn":8,"suggestions":"154"},{"ruleId":"149","severity":1,"message":"150","line":46,"column":32,"nodeType":"151","messageId":"152","endLine":46,"endColumn":34},{"ruleId":"149","severity":1,"message":"150","line":47,"column":34,"nodeType":"151","messageId":"152","endLine":47,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":50,"column":45,"nodeType":"151","messageId":"152","endLine":50,"endColumn":47},{"ruleId":"149","severity":1,"message":"150","line":27,"column":33,"nodeType":"151","messageId":"152","endLine":27,"endColumn":35},{"ruleId":"144","severity":1,"message":"153","line":35,"column":6,"nodeType":"146","endLine":35,"endColumn":8,"suggestions":"155"},{"ruleId":"149","severity":1,"message":"150","line":20,"column":33,"nodeType":"151","messageId":"152","endLine":20,"endColumn":35},{"ruleId":"136","severity":1,"message":"156","line":44,"column":9,"nodeType":"138","messageId":"139","endLine":44,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":16,"column":31,"nodeType":"151","messageId":"152","endLine":16,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":32,"column":31,"nodeType":"151","messageId":"152","endLine":32,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":21,"column":25,"nodeType":"151","messageId":"152","endLine":21,"endColumn":27},{"ruleId":"136","severity":1,"message":"137","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":20,"column":31,"nodeType":"151","messageId":"152","endLine":20,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"149","severity":1,"message":"150","line":21,"column":31,"nodeType":"151","messageId":"152","endLine":21,"endColumn":33},{"ruleId":"136","severity":1,"message":"157","line":35,"column":13,"nodeType":"138","messageId":"139","endLine":35,"endColumn":21},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["160"],["161"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'clubID', 'filter', 'limit', and 'navigate'. Either include them or remove the dependency array.",["162"],["163"],"'handleSelect' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"164","fix":"166"},{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},"Update the dependencies array to be: [navigate, token]",{"range":"170","text":"171"},{"range":"172","text":"171"},"Update the dependencies array to be: [clubID, filter, limit, navigate]",{"range":"173","text":"174"},{"range":"175","text":"174"},[1550,1552],"[navigate, token]",[1359,1361],[1007,1009],"[clubID, filter, limit, navigate]",[1040,1042]]