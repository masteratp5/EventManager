{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\OneDrive\\\\Documents\\\\CodeProjects\\\\EventManagerReact\\\\frontend\\\\src\\\\Component\\\\Base.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport { getUser, getToken } from './Service/AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Base = () => {\n  _s();\n\n  const [isAuthenticating, setAuthenticating] = useState(true);\n  useEffect(() => {\n    const token = getToken();\n    const user = getUser();\n\n    if (token === null || user === null) {\n      resetUserSession();\n      alert(\"Error: Session expired. Please relogin.\");\n      return;\n    }\n\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'n4mlBUgJbT3YSFHliX5tTeakXeB760x9GrdrVJIi'\n      }\n    };\n    const requestBody = {\n      user: user,\n      token: token\n    };\n    axios.post(verifyTokenAPIURL, requestBody, requestConfig).then(response => {\n      setUserSession(response.data.user, response.data.token);\n      setAuthenticating(false);\n    }).catch(() => {\n      resetUserSession();\n      setAuthenticating(false);\n      alert(\"Error: Session expired. Please relogin.\");\n    });\n  }, []);\n  const token = getToken();\n\n  if (isAuthenticating && token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: \"Authenticating...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Base, \"rwhGecC5wesHaq5LFzTIqHDZ1P8=\");\n\n_c = Base;\nexport default Base;\n\nvar _c;\n\n$RefreshReg$(_c, \"Base\");","map":{"version":3,"sources":["C:/Users/Alvin/OneDrive/Documents/CodeProjects/EventManagerReact/frontend/src/Component/Base.js"],"names":["React","useState","useEffect","axios","Routes","Route","useNavigate","getUser","getToken","Base","isAuthenticating","setAuthenticating","token","user","resetUserSession","alert","requestConfig","headers","requestBody","post","verifyTokenAPIURL","then","response","setUserSession","data","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,WAAvB,QAAyC,kBAAzC;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,uBAAhC;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,gBAAD,EAAmBC,iBAAnB,IAAwCV,QAAQ,CAAC,IAAD,CAAtD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,KAAK,GAAGJ,QAAQ,EAAtB;AACA,UAAMK,IAAI,GAAGN,OAAO,EAApB;;AACA,QAAIK,KAAK,KAAK,IAAV,IAAkBC,IAAI,KAAK,IAA/B,EAAqC;AACnCC,MAAAA,gBAAgB;AAChBC,MAAAA,KAAK,CAAC,yCAAD,CAAL;AACA;AACD;;AAED,UAAMC,aAAa,GAAG;AACpBC,MAAAA,OAAO,EAAE;AACP,qBAAa;AADN;AADW,KAAtB;AAKA,UAAMC,WAAW,GAAG;AAClBL,MAAAA,IAAI,EAAEA,IADY;AAElBD,MAAAA,KAAK,EAAEA;AAFW,KAApB;AAKAT,IAAAA,KAAK,CAACgB,IAAN,CAAWC,iBAAX,EAA8BF,WAA9B,EAA2CF,aAA3C,EAA0DK,IAA1D,CAA+DC,QAAQ,IAAI;AACzEC,MAAAA,cAAc,CAACD,QAAQ,CAACE,IAAT,CAAcX,IAAf,EAAqBS,QAAQ,CAACE,IAAT,CAAcZ,KAAnC,CAAd;AACAD,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAHD,EAGGc,KAHH,CAGS,MAAM;AACbX,MAAAA,gBAAgB;AAChBH,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAI,MAAAA,KAAK,CAAC,yCAAD,CAAL;AACD,KAPD;AAQD,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,QAAMH,KAAK,GAAGJ,QAAQ,EAAtB;;AACA,MAAIE,gBAAgB,IAAIE,KAAxB,EAA+B;AAC7B,wBAAO;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1CM;;GAAMH,I;;KAAAA,I;AA4Cb,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Routes, Route, useNavigate} from 'react-router-dom';\r\nimport {getUser, getToken} from './Service/AuthService';\r\n\r\nexport const Base = () => {\r\n\r\n  const [isAuthenticating, setAuthenticating] = useState(true);\r\n  useEffect(() => {\r\n    const token = getToken();\r\n    const user = getUser();\r\n    if (token === null || user === null) {\r\n      resetUserSession();\r\n      alert(\"Error: Session expired. Please relogin.\");\r\n      return;\r\n    }\r\n\r\n    const requestConfig = {\r\n      headers: {\r\n        'x-api-key': 'n4mlBUgJbT3YSFHliX5tTeakXeB760x9GrdrVJIi'\r\n      }\r\n    }\r\n    const requestBody = {\r\n      user: user,\r\n      token: token\r\n    }\r\n\r\n    axios.post(verifyTokenAPIURL, requestBody, requestConfig).then(response => {\r\n      setUserSession(response.data.user, response.data.token);\r\n      setAuthenticating(false);\r\n    }).catch(() => {\r\n      resetUserSession();\r\n      setAuthenticating(false);\r\n      alert(\"Error: Session expired. Please relogin.\");\r\n    })\r\n  }, []);\r\n\r\n  const token = getToken();\r\n  if (isAuthenticating && token) {\r\n    return <div className=\"content\">Authenticating...</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      Hello\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Base;"]},"metadata":{},"sourceType":"module"}