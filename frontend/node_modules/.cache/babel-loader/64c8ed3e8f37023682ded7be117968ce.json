{"ast":null,"code":"var _jsxFileName = \"/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/Component2/EventMaker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { url } from '../../App';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventMaker(props) {\n  _s();\n\n  let navigate = useNavigate();\n  let {\n    clubID\n  } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [capacity, setCapacity] = useState(\"\");\n  const [plannedDate, setPlannedDate] = useState(\"\"); // used to help formate plannedDate\n\n  const [dateCalendar, setDateCalendar] = useState(\"\");\n  const [dateTime, setdateTime] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setPlannedDate(dateCalendar + \"T\" + dateTime);\n    const response = await axios.post(\"http://localhost:3001/clubs\", {\n      user_id: JSON.parse(localStorage.getItem(\"user\")),\n      club_id: clubID,\n      title: title,\n      description: desc,\n      event_capacity: capacity,\n      planned_date: plannedDate\n    }).then(response => {\n      if (response.error == \"\") {\n        alert(\"Event \" + title + \" was successful!\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Event Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: eventName,\n          placeholder: \"enter the event name\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setEventName(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventDate\",\n          children: \"Date: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: eventName,\n          placeholder: \"enter the date\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setEventDate(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loc\",\n          children: \"Event Location: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: eventName,\n          placeholder: \"enter the event location\",\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setEventLoc(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventDesc\",\n          children: \"Event Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: eventDesc,\n          placeholder: \"enter your event description\",\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setEventDesc(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventMaker, \"Ao8T7itFgruYfxQQheun+go1at0=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EventMaker;\nexport default EventMaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventMaker\");","map":{"version":3,"sources":["/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/Component2/EventMaker.js"],"names":["React","useState","useEffect","axios","useNavigate","url","useParams","EventMaker","props","navigate","clubID","title","setTitle","desc","setDesc","capacity","setCapacity","plannedDate","setPlannedDate","dateCalendar","setDateCalendar","dateTime","setdateTime","handleSubmit","e","preventDefault","response","post","user_id","JSON","parse","localStorage","getItem","club_id","description","event_capacity","planned_date","then","error","alert","eventName","target","setEventName","value","setEventDate","setEventLoc","eventDesc","setEventDesc"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {url} from '../../App';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction EventMaker(props){\r\n  let navigate = useNavigate();\r\n  let {clubID} = useParams();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [capacity, setCapacity] = useState(\"\");\r\n  const [plannedDate, setPlannedDate] = useState(\"\");\r\n  // used to help formate plannedDate\r\n  const [dateCalendar, setDateCalendar] = useState(\"\");\r\n  const [dateTime, setdateTime] = useState(\"\");\r\n\r\n  const handleSubmit = async e =>{\r\n    e.preventDefault();\r\n    setPlannedDate(dateCalendar+\"T\"+dateTime);\r\n    const response = await axios.post(\"http://localhost:3001/clubs\", {\r\n      user_id: JSON.parse(localStorage.getItem(\"user\")),\r\n      club_id: clubID,\r\n      title: title,\r\n      description: desc,\r\n      event_capacity: capacity,\r\n      planned_date: plannedDate,\r\n    }).then (response => {\r\n      if (response.error == \"\") {\r\n        alert(\"Event \" + title + \" was successful!\");\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div>\r\n        <p>Create Event</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Event Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={eventName}\r\n            placeholder=\"enter the event name\"\r\n            onChange={({ target }) => setEventName(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n        <label htmlFor=\"eventDate\">Date: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={eventName}\r\n          placeholder=\"enter the date\"\r\n          onChange={({ target }) => setEventDate(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"loc\">Event Location: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={eventName}\r\n            placeholder=\"enter the event location\"\r\n            onChange={({ target }) => setEventLoc(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n        <label htmlFor=\"eventDesc\">Event Description: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={eventDesc}\r\n          placeholder=\"enter your event description\"\r\n          onChange={({ target }) => setEventDesc(target.value)}\r\n          />\r\n        </div>\r\n        <button type =\"submit\">Enter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventMaker;\r\n"]},"metadata":{},"sourceType":"module"}