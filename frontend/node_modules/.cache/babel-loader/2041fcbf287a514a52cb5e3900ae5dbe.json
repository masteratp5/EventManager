{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\OneDrive\\\\Documents\\\\CodeProjects\\\\EventManagerReact\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { getUser, getToken, setUserSession, resetUserSession } from './Component/Service/AuthService';\nimport PublicRoute from './Component/Route/PublicRoute';\nimport PrivateRoute from './Component/Route/PrivateRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst verifyTokenAPIURL = \"https://xhetcinp85.execute-api.us-west-1.amazonaws.com/prod/verify\";\n\nfunction App() {\n  _s();\n\n  const [isAuthenticating, setAuthenticating] = useState(true);\n  useEffect(() => {\n    const token = getToken();\n\n    if (!token) {\n      setAuthenticating(false);\n      return;\n    }\n\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'n4mlBUgJbT3YSFHliX5tTeakXeB760x9GrdrVJIi'\n      }\n    };\n    const requestBody = {\n      user: getUser(),\n      token: token\n    };\n    axios.post(verifyTokenAPIURL, requestBody, requestConfig).then(response => {\n      setUserSession(response.data.user, response.data.token);\n    }).catch(() => {\n      resetUserSession();\n    }).finally(() => {\n      setAuthenticating(false);\n    });\n  }, []);\n\n  if (isAuthenticating) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: \"Authenticating...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(PublicRoute, {\n          component: Register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          component: Sidebar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rwhGecC5wesHaq5LFzTIqHDZ1P8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Alvin/OneDrive/Documents/CodeProjects/EventManagerReact/frontend/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Routes","Route","axios","getUser","getToken","setUserSession","resetUserSession","PublicRoute","PrivateRoute","verifyTokenAPIURL","App","isAuthenticating","setAuthenticating","token","requestConfig","headers","requestBody","user","post","then","response","data","catch","finally","Login","Register","Sidebar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,cAA5B,EAA4CC,gBAA5C,QAAoE,iCAApE;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAEA,MAAMC,iBAAiB,GAAG,oEAA1B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,gBAAD,EAAmBC,iBAAnB,IAAwCd,QAAQ,CAAC,IAAD,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,KAAK,GAAGT,QAAQ,EAAtB;;AACA,QAAI,CAACS,KAAL,EAAY;AACVD,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA;AACD;;AAED,UAAME,aAAa,GAAG;AACpBC,MAAAA,OAAO,EAAE;AACP,qBAAa;AADN;AADW,KAAtB;AAKA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,IAAI,EAAEd,OAAO,EADK;AAElBU,MAAAA,KAAK,EAAEA;AAFW,KAApB;AAKAX,IAAAA,KAAK,CACFgB,IADH,CACQT,iBADR,EAC2BO,WAD3B,EACwCF,aADxC,EAEGK,IAFH,CAESC,QAAD,IAAc;AAClBf,MAAAA,cAAc,CAACe,QAAQ,CAACC,IAAT,CAAcJ,IAAf,EAAqBG,QAAQ,CAACC,IAAT,CAAcR,KAAnC,CAAd;AACD,KAJH,EAKGS,KALH,CAKS,MAAM;AACXhB,MAAAA,gBAAgB;AACjB,KAPH,EAQGiB,OARH,CAQW,MAAM;AACbX,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAVH;AAWD,GA5BQ,EA4BN,EA5BM,CAAT;;AA8BA,MAAID,gBAAJ,EAAsB;AACpB,wBAAO;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,eAAE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEa;AAAxB;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,OAAO,eAAE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,cAHF,eAOE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,OAAO,eAAE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAEC;AAAzB;AAAA;AAAA;AAAA;AAAA;AAA7B;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnDQhB,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nimport { getUser, getToken, setUserSession, resetUserSession } from './Component/Service/AuthService';\nimport PublicRoute from './Component/Route/PublicRoute';\nimport PrivateRoute from './Component/Route/PrivateRoute';\n\nconst verifyTokenAPIURL = \"https://xhetcinp85.execute-api.us-west-1.amazonaws.com/prod/verify\";\n\nfunction App() {\n  const [isAuthenticating, setAuthenticating] = useState(true);\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      setAuthenticating(false);\n      return;\n    }\n\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'n4mlBUgJbT3YSFHliX5tTeakXeB760x9GrdrVJIi',\n      },\n    };\n    const requestBody = {\n      user: getUser(),\n      token: token,\n    };\n\n    axios\n      .post(verifyTokenAPIURL, requestBody, requestConfig)\n      .then((response) => {\n        setUserSession(response.data.user, response.data.token);\n      })\n      .catch(() => {\n        resetUserSession();\n      })\n      .finally(() => {\n        setAuthenticating(false);\n      });\n  }, []);\n\n  if (isAuthenticating) {\n    return <div className=\"content\">Authenticating...</div>;\n  }\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        {/* Use PublicRoute and PrivateRoute components here */}\n        <Route path=\"/login\" element={<PublicRoute component={Login} />} />\n        <Route path=\"/register\" element={<PublicRoute component={Register} />} />\n\n        {/* Other public routes... */}\n\n        <Route path=\"/home\" element={<PrivateRoute component={Sidebar} />} />\n        {/* Other private routes... */}\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}