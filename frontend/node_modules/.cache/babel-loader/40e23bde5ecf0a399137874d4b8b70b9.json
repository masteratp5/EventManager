{"ast":null,"code":"var _jsxFileName = \"/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { url } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [fName, setFName] = useState(\"\");\n  const [lName, setLName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPW] = useState(\"\");\n  const [userBio, setUserBio] = useState(\"\");\n  let navigate = useNavigate(); // send form to server to create account\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await axios.post(url + \"/users\", {\n      first_name: userID,\n      last_name: userPW,\n      name: userName,\n      bio: userBio,\n      club: []\n    });\n    alert(\"Account creation successful!\");\n    navigate(\"/\");\n  }; // cancel registration process and go back to login\n\n\n  function goLogin() {\n    navigate(\"/\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"id\",\n          children: \"ID: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userID,\n          placeholder: \"enter a user ID\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setUserID(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pw\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userPW,\n          placeholder: \"enter a user password\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setUserPW(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userName,\n          placeholder: \"enter your username\",\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setUserName(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bio\",\n          children: \"Biography: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userBio,\n          placeholder: \"personalize your profile\",\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setUserBio(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--alt\",\n        type: \"submit\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--alt\",\n        onClick: goLogin,\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"zHC4Jvw706XstPlsFicakS8CmHw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/Register.js"],"names":["React","useState","useEffect","axios","useNavigate","url","Register","fName","setFName","lName","setLName","email","setEmail","pw","setPW","userBio","setUserBio","navigate","handleSubmit","e","preventDefault","response","post","first_name","userID","last_name","userPW","name","userName","bio","club","alert","goLogin","target","setUserID","value","setUserPW","setUserName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {url} from '../App';\r\n\r\nfunction Register(){\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pw, setPW] = useState(\"\");\r\n  const [userBio, setUserBio] = useState(\"\");\r\n  let navigate = useNavigate();\r\n\r\n  // send form to server to create account\r\n  const handleSubmit = async e =>{\r\n    e.preventDefault();\r\n    const response = await axios.post(url + \"/users\", {\r\n      first_name: userID,\r\n      last_name: userPW,\r\n      name: userName,\r\n      bio: userBio,\r\n      club: []\r\n    });\r\n    alert(\"Account creation successful!\")\r\n    navigate(\"/\");\r\n  };\r\n\r\n  // cancel registration process and go back to login\r\n  function goLogin(){\r\n    navigate(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div>\r\n        <p>Create Account</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"id\">ID: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={userID}\r\n            placeholder=\"enter a user ID\"\r\n            onChange={({ target }) => setUserID(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"pw\">Password: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={userPW}\r\n            placeholder=\"enter a user password\"\r\n            onChange={({ target }) => setUserPW(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n        <label htmlFor=\"name\">Name: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={userName}\r\n          placeholder=\"enter your username\"\r\n          onChange={({ target }) => setUserName(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n        <label htmlFor=\"bio\">Biography: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={userBio}\r\n          placeholder=\"personalize your profile\"\r\n          onChange={({ target }) => setUserBio(target.value)}\r\n          />\r\n        </div>\r\n        <button className='btn btn--alt' type =\"submit\">Enter</button>\r\n        <button className='btn btn--alt' onClick = {goLogin}>Go Back</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}