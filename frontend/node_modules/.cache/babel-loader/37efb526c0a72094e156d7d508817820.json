{"ast":null,"code":"var _jsxFileName = \"/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/ViewClubSingle.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport EventMaker from './EventMaker';\nimport Backdrop from './Component2/Backdrop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ViewClubSingle = () => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [clubID, setClubID] = useState();\n  const [clubName, setClubName] = useState(\"\");\n  const [clubDesc, setClubDesc] = useState(\"\");\n  const [clubEvent, setClubEvent] = useState([]); // used for event-making modal\n\n  const [eventMakerOpen, setEventMakerOpen] = useState(false);\n\n  function openEventMaker() {\n    setEventMakerOpen(true);\n  }\n\n  function closeEventMaker() {\n    setEventMakerOpen(false);\n  }\n\n  useEffect(() => {\n    async function getClub() {\n      const response = await axios.get(\"http://localhost:3001/clubs/\", {\n        params: {\n          id: id\n        }\n      });\n      setClubID(response.data[0].id);\n      setClubName(response.data[0].name);\n      setClubDesc(response.data[0].description);\n      setClubEvent(response.data[0].event);\n      alert(clubEvent);\n    }\n\n    ;\n    getClub();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [clubName, \" (@\", clubID, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: clubDesc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn--alt\",\n          onClick: openEventMaker,\n          children: \"Make Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), eventMakerOpen && /*#__PURE__*/_jsxDEV(EventMaker, {\n        onCancel: closeEventMaker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 28\n      }, this), eventMakerOpen && /*#__PURE__*/_jsxDEV(Backdrop, {\n        onCancel: closeEventMaker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}; // failed implementaiton of recurivsily displaying all events\n// <div>\n//   {clubEvent.map(event) => (\n//     <div className='card'>\n//       <a href=\"\">{event}</a>\n//     </div>\n//   )}\n// </div>\n\n_s(ViewClubSingle, \"fC4OX2nTO7dA7tt8Eg83HnyMZ/4=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewClubSingle;\nexport default ViewClubSingle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewClubSingle\");","map":{"version":3,"sources":["/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/ViewClubSingle.js"],"names":["useParams","React","useState","useEffect","axios","EventMaker","Backdrop","ViewClubSingle","id","clubID","setClubID","clubName","setClubName","clubDesc","setClubDesc","clubEvent","setClubEvent","eventMakerOpen","setEventMakerOpen","openEventMaker","closeEventMaker","getClub","response","get","params","data","name","description","event","alert"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,MAAI;AAACC,IAAAA;AAAD,MAAOR,SAAS,EAApB;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBR,QAAQ,EAApC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C,CALkC,CAOlC;;AACA,QAAM,CAACe,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,KAAD,CAApD;;AACA,WAASiB,cAAT,GAAyB;AACvBD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;;AACD,WAASE,eAAT,GAA0B;AACxBF,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;;AAEDf,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAekB,OAAf,GAAwB;AACtB,YAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,8BAAV,EAA0C;AAC/DC,QAAAA,MAAM,EAAC;AACLhB,UAAAA,EAAE,EAAEA;AADC;AADwD,OAA1C,CAAvB;AAKAE,MAAAA,SAAS,CAACY,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBjB,EAAlB,CAAT;AACAI,MAAAA,WAAW,CAACU,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBC,IAAlB,CAAX;AACAZ,MAAAA,WAAW,CAACQ,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBE,WAAlB,CAAX;AACAX,MAAAA,YAAY,CAACM,QAAQ,CAACG,IAAT,CAAc,CAAd,EAAiBG,KAAlB,CAAZ;AACAC,MAAAA,KAAK,CAACd,SAAD,CAAL;AACD;;AAAA;AACDM,IAAAA,OAAO;AACR,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA,mBACGV,QADH,SACgBF,MADhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA,kBACGI;AADH;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAEM,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,EAaGF,cAAc,iBAAI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,cAbrB,EAcGH,cAAc,iBAAI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEG;AAApB;AAAA;AAAA;AAAA;AAAA,cAdrB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CApDM,C,CAsDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA7Dab,c;UACAP,S;;;KADAO,c;AAkEb,eAAeA,cAAf","sourcesContent":["import {useParams} from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport EventMaker from './EventMaker';\r\nimport Backdrop from './Component2/Backdrop';\r\n\r\nexport const ViewClubSingle = () => {\r\n  let {id} = useParams();\r\n  const [clubID, setClubID] = useState();\r\n  const [clubName, setClubName] = useState(\"\");\r\n  const [clubDesc, setClubDesc] = useState(\"\");\r\n  const [clubEvent, setClubEvent] = useState([]);\r\n\r\n  // used for event-making modal\r\n  const [eventMakerOpen, setEventMakerOpen] = useState(false);\r\n  function openEventMaker(){\r\n    setEventMakerOpen(true);\r\n  }\r\n  function closeEventMaker(){\r\n    setEventMakerOpen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getClub(){\r\n      const response = await axios.get(\"http://localhost:3001/clubs/\", {\r\n        params:{\r\n          id: id\r\n        }\r\n      });\r\n      setClubID(response.data[0].id);\r\n      setClubName(response.data[0].name);\r\n      setClubDesc(response.data[0].description);\r\n      setClubEvent(response.data[0].event);\r\n      alert(clubEvent);\r\n    };\r\n    getClub();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div className='card'>\r\n        <div>\r\n          {clubName} (@{clubID})\r\n        </div>\r\n        <div>\r\n          Description\r\n        </div>\r\n        <div>\r\n          {clubDesc}\r\n        </div>\r\n        <div className='actions'>\r\n          <button className='btn btn--alt' onClick={openEventMaker}>Make Event</button>\r\n        </div>\r\n        {eventMakerOpen && <EventMaker onCancel={closeEventMaker}/>}\r\n        {eventMakerOpen && <Backdrop onCancel={closeEventMaker}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// failed implementaiton of recurivsily displaying all events\r\n// <div>\r\n//   {clubEvent.map(event) => (\r\n//     <div className='card'>\r\n//       <a href=\"\">{event}</a>\r\n//     </div>\r\n//   )}\r\n// </div>\r\n\r\n\r\n\r\n\r\nexport default ViewClubSingle;\r\n"]},"metadata":{},"sourceType":"module"}