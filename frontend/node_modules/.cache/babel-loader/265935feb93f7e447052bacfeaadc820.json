{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\OneDrive\\\\Documents\\\\CodeProjects\\\\EventManagerReact\\\\frontend\\\\src\\\\Component\\\\ProfileEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst updateURL = \"https://xhetcinp85.execute-api.us-west-1.amazonaws.com/prod/update\";\n\nconst UpdateUser = () => {\n  _s();\n\n  const [updatedUser, setUpdatedUser] = useState({\n    currentUsername: '',\n    // Provide the current username or another unique identifier\n    username: '',\n    email: '',\n    name: '',\n    password: '',\n    userDescription: '',\n    userId: ''\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedUser(prevUser => ({ ...prevUser,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(updateURL, updatedUser, {\n        headers: {\n          'x-api-key': 'n4mlBUgJbT3YSFHliX5tTeakXeB760x9GrdrVJIi'\n        }\n      });\n      console.log(response.data); // Handle the response from the backend\n    } catch (error) {\n      console.error('Error updating user:', error.message); // Handle error appropriately\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"currentUsername\",\n          value: updatedUser.currentUsername,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"New Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: updatedUser.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateUser, \"s9PWGE0ypq5LoNFNsLhrN9N6FEk=\");\n\n_c = UpdateUser;\nexport default UpdateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateUser\");","map":{"version":3,"sources":["C:/Users/Alvin/OneDrive/Documents/CodeProjects/EventManagerReact/frontend/src/Component/ProfileEdit.js"],"names":["React","useState","axios","updateURL","UpdateUser","updatedUser","setUpdatedUser","currentUsername","username","email","name","password","userDescription","userId","handleChange","e","value","target","prevUser","handleSubmit","preventDefault","response","post","headers","console","log","data","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,oEAAlB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC;AAC7CM,IAAAA,eAAe,EAAE,EAD4B;AACxB;AACrBC,IAAAA,QAAQ,EAAE,EAFmC;AAG7CC,IAAAA,KAAK,EAAE,EAHsC;AAI7CC,IAAAA,IAAI,EAAE,EAJuC;AAK7CC,IAAAA,QAAQ,EAAE,EALmC;AAM7CC,IAAAA,eAAe,EAAE,EAN4B;AAO7CC,IAAAA,MAAM,EAAE;AAPqC,GAAD,CAA9C;;AAUA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEL,MAAAA,IAAF;AAAQM,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAX,IAAAA,cAAc,CAAEY,QAAD,KAAe,EAC5B,GAAGA,QADyB;AAE5B,OAACR,IAAD,GAAQM;AAFoB,KAAf,CAAD,CAAd;AAID,GAND;;AAQA,QAAMG,YAAY,GAAG,MAAOJ,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACK,cAAF;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CAAWnB,SAAX,EAAsBE,WAAtB,EAAmC;AACxDkB,QAAAA,OAAO,EAAE;AACL,uBAAa;AADR;AAD+C,OAAnC,CAAvB;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAArB,EAPE,CAO0B;AAC7B,KARD,CAQE,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACG,KAAR,CAAc,sBAAd,EAAsCA,KAAK,CAACC,OAA5C,EADc,CAEd;AACD;AACF,GAfD;;AAiBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAET,YAAhB;AAAA,8BAEE;AAAA,qDAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,iBAAxB;AAA0C,UAAA,KAAK,EAAEd,WAAW,CAACE,eAA7D;AAA8E,UAAA,QAAQ,EAAEO;AAAxF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA,iDAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,KAAK,EAAET,WAAW,CAACG,QAAtD;AAAgE,UAAA,QAAQ,EAAEM;AAA1E;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,eAcE;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA1DD;;GAAMV,U;;KAAAA,U;AA4DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst updateURL = \"https://xhetcinp85.execute-api.us-west-1.amazonaws.com/prod/update\";\r\n\r\nconst UpdateUser = () => {\r\n  const [updatedUser, setUpdatedUser] = useState({\r\n    currentUsername: '', // Provide the current username or another unique identifier\r\n    username: '',\r\n    email: '',\r\n    name: '',\r\n    password: '',\r\n    userDescription: '',\r\n    userId: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatedUser((prevUser) => ({\r\n      ...prevUser,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(updateURL, updatedUser, {\r\n        headers: {\r\n            'x-api-key': 'n4mlBUgJbT3YSFHliX5tTeakXeB760x9GrdrVJIi',\r\n        },\r\n      });\r\n\r\n      console.log(response.data); // Handle the response from the backend\r\n    } catch (error) {\r\n      console.error('Error updating user:', error.message);\r\n      // Handle error appropriately\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update User</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Add input fields for the attributes you want to update */}\r\n        <label>\r\n          Current Username:\r\n          <input type=\"text\" name=\"currentUsername\" value={updatedUser.currentUsername} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          New Username:\r\n          <input type=\"text\" name=\"username\" value={updatedUser.username} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        {/* Add input fields for other attributes (email, name, password, userDescription, userId) */}\r\n        {/* ... */}\r\n        <br />\r\n        <button type=\"submit\">Update User</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateUser;"]},"metadata":{},"sourceType":"module"}