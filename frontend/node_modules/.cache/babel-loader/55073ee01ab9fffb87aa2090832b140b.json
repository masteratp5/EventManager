{"ast":null,"code":"var _jsxFileName = \"/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport { url } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState();\n  let navigate = useNavigate();\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"user\");\n\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setUser(foundUser);\n    }\n  }, []); // login the user\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user = {\n      email,\n      password\n    }; // send the id and password to the server\n\n    const response = await axios.get(url + \"/users\", {\n      params: {\n        email: user.email,\n        password: user.password\n      }\n    }); // set the state of the user\n\n    setUser(response.data); // store the user in localStorage\n\n    localStorage.setItem(\"user\", JSON.stringify(response.data[0].id));\n    localStorage.setItem(\"name\", JSON.stringify(response.data[0].name));\n    localStorage.setItem(\"bio\", JSON.stringify(response.data[0].bio));\n    localStorage.setItem(\"club\", JSON.stringify(response.data[0].club));\n    navigate(\"/ac\");\n  }; // if there's a user show the message below\n\n\n  if (user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  } // to make a new account\n\n\n  const goRegister = () => {\n    window.location.pathname = '/register';\n  }; // if there's no user, show the login form\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Welcome to Event Manager!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        placeholder: \"enter an ID\",\n        onChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setEmail(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          placeholder: \"enter a password\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--alt\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--alt\",\n        onClick: goRegister,\n        children: \"Register Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"YOz3Z4tpRsudgo9fj/8PNZa95ow=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/Login.js"],"names":["React","useState","useEffect","axios","Routes","Route","useNavigate","url","Login","email","setEmail","password","setPassword","user","setUser","navigate","loggedInUser","localStorage","getItem","foundUser","JSON","parse","handleSubmit","e","preventDefault","response","get","params","data","setItem","stringify","id","name","bio","club","goRegister","window","location","pathname","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {Routes, Route, useNavigate} from 'react-router-dom';\r\nimport {url} from '../App';\r\n\r\nexport const Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState();\r\n  let navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const loggedInUser = localStorage.getItem(\"user\");\r\n    if (loggedInUser) {\r\n      const foundUser = JSON.parse(loggedInUser);\r\n      setUser(foundUser);\r\n    }\r\n  }, []);\r\n\r\n  // login the user\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const user = {email, password};\r\n    // send the id and password to the server\r\n    const response = await axios.get(url+\"/users\", {\r\n      params: {\r\n        email: user.email,\r\n        password: user.password\r\n      }\r\n    });\r\n    // set the state of the user\r\n    setUser(response.data);\r\n    // store the user in localStorage\r\n    localStorage.setItem(\"user\", JSON.stringify(response.data[0].id));\r\n    localStorage.setItem(\"name\", JSON.stringify(response.data[0].name));\r\n    localStorage.setItem(\"bio\", JSON.stringify(response.data[0].bio));\r\n    localStorage.setItem(\"club\", JSON.stringify(response.data[0].club));\r\n    navigate(\"/ac\");\r\n  };\r\n\r\n  // if there's a user show the message below\r\n  if (user) {\r\n    return (\r\n      <div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // to make a new account\r\n  const goRegister = () => {\r\n    window.location.pathname = '/register';\r\n  };\r\n\r\n  // if there's no user, show the login form\r\n  return (\r\n    <div className='card'>\r\n      <div>\r\n        Welcome to Event Manager!\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"email\">Email: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={email}\r\n          placeholder=\"enter an ID\"\r\n          onChange={({ target }) => setEmail(target.value)}\r\n        />\r\n        <div>\r\n          <label htmlFor=\"password\">password: </label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            placeholder=\"enter a password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button className='btn btn--alt' type=\"submit\">Login</button>\r\n        <button className='btn btn--alt' onClick = {goRegister}>Register Now</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}