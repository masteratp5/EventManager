{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\OneDrive\\\\Documents\\\\CodeProjects\\\\EventManagerReact\\\\frontend\\\\src\\\\Component\\\\Route\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { getToken } from '../Service/AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const token = getToken(); // Replace with your token check logic\n\n  return /*#__PURE__*/_jsxDEV(Routes, { ...rest,\n    element: token ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 51\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/Alvin/OneDrive/Documents/CodeProjects/EventManagerReact/frontend/src/Component/Route/PrivateRoute.js"],"names":["React","Route","Navigate","getToken","PrivateRoute","component","Component","rest","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAAQC,QAAR,QAAuB,wBAAvB;;;AAEA,MAAMC,YAAY,GAAG,QAAuC;AAAA,MAAtC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAsC;AAC1D,QAAMC,KAAK,GAAGL,QAAQ,EAAtB,CAD0D,CAChC;;AAE1B,sBACE,QAAC,MAAD,OACMI,IADN;AAEE,IAAA,OAAO,EAAEC,KAAK,gBAAG,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA8B,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAF9C;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CATD;;KAAMJ,Y;AAWN,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Navigate } from 'react-router-dom';\r\nimport {getToken} from '../Service/AuthService';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const token = getToken(); // Replace with your token check logic\r\n\r\n  return (\r\n    <Routes\r\n      {...rest}\r\n      element={token ? <Navigate to=\"/login\" /> : <Component />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}