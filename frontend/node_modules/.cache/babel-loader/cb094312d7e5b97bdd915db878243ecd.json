{"ast":null,"code":"var _jsxFileName = \"/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/ViewClubAnnouncements.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport EventMaker from './Component2/EventMaker';\nimport { url } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ViewClubAnnouncements = () => {\n  _s();\n\n  let {\n    clubID\n  } = useParams(); //club's event parameters\n\n  const [annos, setAnnos] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [limit, setLimit] = useState(\"\");\n  useEffect(() => {\n    async function getEvents() {\n      const response = await axios.get(url + \"/announcement\", {\n        params: {\n          user_id: JSON.parse(localStorage.getItem(\"user\")),\n          club_id: clubID,\n          filter: filter,\n          limit: limit\n        }\n      }).then(resposne => {\n        if (response.error == \"\") setAnnos(response.announcements_list);else alert(\"Error: \" + response.error);\n      }).catch(error => {\n        alert(error);\n        navigate(-1);\n      });\n    }\n\n    ;\n    getEvents();\n  }, []); // used to create an event\n\n  const [eventMakerOpen, setEventMakerOpen] = useState(false);\n\n  function openEventMaker() {\n    setEventMakerOpen(true);\n  }\n\n  function closeEventMaker() {\n    setEventMakerOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"filter\",\n          children: \"Search by name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: filter,\n          placeholder: \"search club by name\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setFilter(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"limit\",\n          children: \"Change viewing limit: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: limit,\n          placeholder: \"change the viewing limit\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setLimit(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [clubID, \"'s Events:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: openEventMaker,\n        children: \"Create an Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), eventMakerOpen && /*#__PURE__*/_jsxDEV(EventMaker, {\n      onCancel: closeEventMaker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 28\n    }, this), eventMakerOpen && /*#__PURE__*/_jsxDEV(Backdrop, {\n      onCancel: closeEventMaker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [event.title, \" (@\", event.event_id, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Organized By \", event.club_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Planned Date: \", event.planned_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Event Created: \", event.date_generated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Capacity: \", event.num_attending, \"/\", event.event_capacity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"People Involved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: event.people_involved.map(person => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"(person)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => handleJoinStatus(event),\n          children: \"Mark Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewClubAnnouncements, \"iQe5hgLNY2a25e8ou/ANJQ8rHFU=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewClubAnnouncements;\nexport default ViewClubAnnuncements;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewClubAnnouncements\");","map":{"version":3,"sources":["/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/ViewClubAnnouncements.js"],"names":["useParams","React","useState","useEffect","axios","EventMaker","url","ViewClubAnnouncements","clubID","annos","setAnnos","filter","setFilter","limit","setLimit","getEvents","response","get","params","user_id","JSON","parse","localStorage","getItem","club_id","then","resposne","error","announcements_list","alert","catch","navigate","eventMakerOpen","setEventMakerOpen","openEventMaker","closeEventMaker","target","value","events","map","event","title","event_id","planned_date","date_generated","num_attending","event_capacity","description","people_involved","person","handleJoinStatus","ViewClubAnnuncements"],"mappings":"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","sourcesContent":["import {useParams} from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport EventMaker from './Component2/EventMaker';\nimport {url} from '../App';\n\n\nexport const ViewClubAnnouncements = () => {\n  let {clubID} = useParams();\n  //club's event parameters\n  const [annos, setAnnos] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [limit, setLimit] = useState(\"\");\n\n\n  useEffect(() => {\n    async function getEvents(){\n      const response = await axios.get(url+\"/announcement\", {\n        params:{\n          user_id: JSON.parse(localStorage.getItem(\"user\")),\n          club_id: clubID,\n          filter: filter,\n          limit: limit\n        }\n      }).then(resposne => {\n        if (response.error == \"\") setAnnos(response.announcements_list);\n        else alert(\"Error: \" + response.error);\n      }).catch (error => {\n        alert(error);\n        navigate(-1);\n      });\n    };\n    getEvents();\n  }, [])\n\n  // used to create an event\n  const[eventMakerOpen, setEventMakerOpen] = useState(false);\n  function openEventMaker(){\n    setEventMakerOpen(true);\n  }\n  function closeEventMaker(){\n    setEventMakerOpen(false);\n  }\n\n  return (\n    <div>\n        <div>\n          <form>\n            <label htmlFor=\"filter\">Search by name: </label>\n            <input\n              type=\"text\"\n              value={filter}\n              placeholder=\"search club by name\"\n              onChange={({ target }) => setFilter(target.value)}\n              />\n            <button type =\"submit\">Enter</button>\n          </form>\n        </div>\n        <div>\n          <form>\n            <label htmlFor=\"limit\">Change viewing limit: </label>\n            <input\n              type=\"text\"\n              value={limit}\n              placeholder=\"change the viewing limit\"\n              onChange={({ target }) => setLimit(target.value)}\n              />\n            <button type =\"submit\">Enter</button>\n          </form>\n        </div>\n        <div>\n          <p>{clubID}'s Events:</p>\n        </div>\n        <div className='actions'>\n          <button className='btn' onClick={openEventMaker}>Create an Event</button>\n        </div>\n        {eventMakerOpen && <EventMaker onCancel={closeEventMaker}/>}\n        {eventMakerOpen && <Backdrop onCancel={closeEventMaker}/>}\n        <div>\n          {events.map((event) => (\n          <div className = \"card\">\n            <p>{event.title} (@{event.event_id})</p>\n            <p>Organized By {event.club_id}</p>\n            <p>Planned Date: {event.planned_date}</p>\n            <p>Event Created: {event.date_generated}</p>\n            <p>Capacity: {event.num_attending}/{event.event_capacity}</p>\n            <div>\n              <div>\n                Description\n              </div>\n              <div>\n                {event.description}\n              </div>\n            </div>\n            <div>\n              <div>\n                People Involved\n              </div>\n              <div>\n                {event.people_involved.map((person) => (\n                  <p>(person)</p>\n                ))}\n              </div>\n            </div>\n            <button className='btn' onClick={() => handleJoinStatus(event)}>Mark Event</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewClubAnnuncements;\n"]},"metadata":{},"sourceType":"module"}