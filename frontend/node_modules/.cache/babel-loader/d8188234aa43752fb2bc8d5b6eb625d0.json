{"ast":null,"code":"var _jsxFileName = \"/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/ViewClubEvents.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport EventMaker from './EventMaker';\nimport { url } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ViewClubSingle = () => {\n  _s();\n\n  let {\n    clubID\n  } = useParams(); //club's event parameters\n\n  const [events, setEvents] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [limit, setLimit] = useState(\"\");\n  useEffect(() => {\n    async function getEvents() {\n      const response = await axios.get(url + \"/event\", {\n        params: {\n          user_id: localStorage.getItem(\"user\"),\n          club_id: clubID,\n          filter: filter,\n          limit: limit\n        }\n      }).then(resposne => {\n        if (response.error == \"\") setEvents(response.event_list);else alert(\"Error: \" + response.error);\n      }).catch(error => {\n        alert(error);\n        navigate(-1);\n      });\n    }\n\n    ;\n    getEvents();\n  }, []);\n\n  function handleJoinStatus(event) {} // const handleJoinStatus = async e =>{\n  //   e.preventDefault();\n  //   const response = await axios.posrt(url+\"/event\", {\n  //     params:{\n  //       user_id: localStorage.getItem(\"user\"),\n  //       club_id: clubID,\n  //       event_id: ad\n  //     }\n  //   })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"filter\",\n          children: \"Search by name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: filter,\n          placeholder: \"search club by name\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setFilter(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"limit\",\n          children: \"Change viewing limit: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: limit,\n          placeholder: \"change the viewing limit\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setLimit(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [clubID, \"'s Events:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [event.title, \" (@\", event.event_id, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Organized By \", event.club_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Planned Date: \", event.planned_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Event Created: \", event.date_generated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Capacity: \", event.num_attending, \"/\", event.event_capacity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"People Involved\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: event.people_involved.map(person => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"(person)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => handleJoinStatus(event),\n          children: \"Mark Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ViewClubSingle, \"XGilpNzTA+8VtA2isHuwei8Lrng=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewClubSingle;\nexport default ViewClubSingle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewClubSingle\");","map":{"version":3,"sources":["/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/ViewClubEvents.js"],"names":["useParams","React","useState","useEffect","axios","EventMaker","url","ViewClubSingle","clubID","events","setEvents","filter","setFilter","limit","setLimit","getEvents","response","get","params","user_id","localStorage","getItem","club_id","then","resposne","error","event_list","alert","catch","navigate","handleJoinStatus","event","target","value","map","title","event_id","planned_date","date_generated","num_attending","event_capacity","description","people_involved","person"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,GAAR,QAAkB,QAAlB;;AAGA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,MAAI;AAACC,IAAAA;AAAD,MAAWR,SAAS,EAAxB,CADkC,CAElC;;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,SAAf,GAA0B;AACxB,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUX,GAAG,GAAC,QAAd,EAAwB;AAC7CY,QAAAA,MAAM,EAAC;AACLC,UAAAA,OAAO,EAAEC,YAAY,CAACC,OAAb,CAAqB,MAArB,CADJ;AAELC,UAAAA,OAAO,EAAEd,MAFJ;AAGLG,UAAAA,MAAM,EAAEA,MAHH;AAILE,UAAAA,KAAK,EAAEA;AAJF;AADsC,OAAxB,EAOpBU,IAPoB,CAOfC,QAAQ,IAAI;AAClB,YAAIR,QAAQ,CAACS,KAAT,IAAkB,EAAtB,EAA0Bf,SAAS,CAACM,QAAQ,CAACU,UAAV,CAAT,CAA1B,KACKC,KAAK,CAAC,YAAYX,QAAQ,CAACS,KAAtB,CAAL;AACN,OAVsB,EAUpBG,KAVoB,CAUbH,KAAK,IAAI;AACjBE,QAAAA,KAAK,CAACF,KAAD,CAAL;AACAI,QAAAA,QAAQ,CAAC,CAAC,CAAF,CAAR;AACD,OAbsB,CAAvB;AAcD;;AAAA;AACDd,IAAAA,SAAS;AACV,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,WAASe,gBAAT,CAA0BC,KAA1B,EAAgC,CAE/B,CA9BiC,CAgClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAA,4BACI;AAAA,6BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEpB,MAFT;AAGE,UAAA,WAAW,EAAC,qBAHd;AAIE,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAEqB,cAAAA;AAAF,aAAD;AAAA,mBAAgBpB,SAAS,CAACoB,MAAM,CAACC,KAAR,CAAzB;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAQ,UAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAA,6BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEpB,KAFT;AAGE,UAAA,WAAW,EAAC,0BAHd;AAIE,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAAEmB,cAAAA;AAAF,aAAD;AAAA,mBAAgBlB,QAAQ,CAACkB,MAAM,CAACC,KAAR,CAAxB;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAQ,UAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbJ,eAyBI;AAAA,6BACE;AAAA,mBAAIzB,MAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzBJ,eA4BI;AAAA,gBACGC,MAAM,CAACyB,GAAP,CAAYH,KAAD,iBACZ;AAAK,QAAA,SAAS,EAAG,MAAjB;AAAA,gCACE;AAAA,qBAAIA,KAAK,CAACI,KAAV,SAAoBJ,KAAK,CAACK,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,sCAAiBL,KAAK,CAACT,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,uCAAkBS,KAAK,CAACM,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,wCAAmBN,KAAK,CAACO,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,mCAAcP,KAAK,CAACQ,aAApB,OAAoCR,KAAK,CAACS,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,sBACGT,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAcE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAA,sBACGV,KAAK,CAACW,eAAN,CAAsBR,GAAtB,CAA2BS,MAAD,iBACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eAwBE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAE,MAAMb,gBAAgB,CAACC,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADC;AADH;AAAA;AAAA;AAAA;AAAA,YA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD,CAxGM;;GAAMxB,c;UACIP,S;;;KADJO,c;AA0Gb,eAAeA,cAAf","sourcesContent":["import {useParams} from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport EventMaker from './EventMaker';\nimport {url} from '../App';\n\n\nexport const ViewClubSingle = () => {\n  let {clubID} = useParams();\n  //club's event parameters\n  const [events, setEvents] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [limit, setLimit] = useState(\"\");\n\n\n  useEffect(() => {\n    async function getEvents(){\n      const response = await axios.get(url+\"/event\", {\n        params:{\n          user_id: localStorage.getItem(\"user\"),\n          club_id: clubID,\n          filter: filter,\n          limit: limit\n        }\n      }).then(resposne => {\n        if (response.error == \"\") setEvents(response.event_list);\n        else alert(\"Error: \" + response.error);\n      }).catch (error => {\n        alert(error);\n        navigate(-1);\n      });\n    };\n    getEvents();\n  }, [])\n\n  function handleJoinStatus(event){\n\n  }\n\n  // const handleJoinStatus = async e =>{\n  //   e.preventDefault();\n  //   const response = await axios.posrt(url+\"/event\", {\n  //     params:{\n  //       user_id: localStorage.getItem(\"user\"),\n  //       club_id: clubID,\n  //       event_id: ad\n  //     }\n  //   })\n  // }\n\n  return (\n    <div>\n        <div>\n          <form>\n            <label htmlFor=\"filter\">Search by name: </label>\n            <input\n              type=\"text\"\n              value={filter}\n              placeholder=\"search club by name\"\n              onChange={({ target }) => setFilter(target.value)}\n              />\n            <button type =\"submit\">Enter</button>\n          </form>\n        </div>\n        <div>\n          <form>\n            <label htmlFor=\"limit\">Change viewing limit: </label>\n            <input\n              type=\"text\"\n              value={limit}\n              placeholder=\"change the viewing limit\"\n              onChange={({ target }) => setLimit(target.value)}\n              />\n            <button type =\"submit\">Enter</button>\n          </form>\n        </div>\n        <div>\n          <p>{clubID}'s Events:</p>\n        </div>\n        <div>\n          {events.map((event) => (\n          <div className = \"card\">\n            <p>{event.title} (@{event.event_id})</p>\n            <p>Organized By {event.club_id}</p>\n            <p>Planned Date: {event.planned_date}</p>\n            <p>Event Created: {event.date_generated}</p>\n            <p>Capacity: {event.num_attending}/{event.event_capacity}</p>\n            <div>\n              <div>\n                Description\n              </div>\n              <div>\n                {event.description}\n              </div>\n            </div>\n            <div>\n              <div>\n                People Involved\n              </div>\n              <div>\n                {event.people_involved.map((person) => (\n                  <p>(person)</p>\n                ))}\n              </div>\n            </div>\n            <button className='btn' onClick={() => handleJoinStatus(event)}>Mark Event</button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewClubSingle;\n"]},"metadata":{},"sourceType":"module"}