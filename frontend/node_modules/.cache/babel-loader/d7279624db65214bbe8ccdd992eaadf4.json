{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\OneDrive\\\\Documents\\\\CodeProjects\\\\EventManagerReact\\\\frontend\\\\src\\\\Component\\\\Component2\\\\EventMaker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { url } from '../../App';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EventMaker(props) {\n  _s();\n\n  let navigate = useNavigate();\n  let {\n    clubID\n  } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [capacity, setCapacity] = useState(\"\");\n  const [plannedDate, setPlannedDate] = useState(\"\"); // used to help formate plannedDate\n\n  const [dateYear, setDateYear] = useState(\"\");\n  const [dateMonth, setDateMonth] = useState(\"\");\n  const [dateDay, setDateDay] = useState(\"\");\n  const [dateHour, setDateHour] = useState(\"\");\n  const [dateMinute, setDateMinute] = useState(\"\");\n  const [dateSecond, setDateSecond] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setPlannedDate(dateYear + \"-\" + dateMonth + \"-\" + dateDay + \"T\" + dateHour + \":\" + dateMinute + \":\" + dateSecond);\n    axios.post(\"http://localhost:3001/clubs\", {\n      user_id: JSON.parse(localStorage.getItem(\"user\")),\n      club_id: clubID,\n      title: title,\n      description: desc,\n      event_capacity: capacity,\n      planned_date: plannedDate\n    }).then(response => {\n      if (response.data.error == \"\") {\n        alert(\"Event \" + title + \" was successful!\");\n        navigate(\"/clubs/\" + clubID + \"/events\");\n      } else alert(\"Error: \" + response.data.error);\n    }).catch(error => {\n      alert(error);\n      navigate(\"/clubs/\" + clubID + \"/events\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Create Event for \", clubID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Event Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          placeholder: \"enter the event title\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setTitle(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventDesc\",\n          children: \"Event Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: desc,\n          placeholder: \"enter your event description\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setDesc(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"capacity\",\n          children: \"Capacity: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: capacity,\n          placeholder: \"enter the max capacity\",\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setCapacity(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateCalendar\",\n          children: \"Planned Calendar Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateYear\",\n          children: \"Year: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateYear,\n          placeholder: \"enter the year: (YYYY)\",\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setDateYear(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateMonth\",\n          children: \"Month: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateMonth,\n          placeholder: \"enter the month: (MM)\",\n          onChange: _ref5 => {\n            let {\n              target\n            } = _ref5;\n            return setDateMonth(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateDay\",\n          children: \"Day: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateDay,\n          placeholder: \"enter the day: (DD)\",\n          onChange: _ref6 => {\n            let {\n              target\n            } = _ref6;\n            return setDateDay(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateCalendar\",\n          children: \"Planned Time Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateHour\",\n          children: \"Hour: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateHour,\n          placeholder: \"enter the hour (use 24-hour system): (HH)\",\n          onChange: _ref7 => {\n            let {\n              target\n            } = _ref7;\n            return setDateHour(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateMinute\",\n          children: \"Minute: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateMinute,\n          placeholder: \"enter the minute: (MM)\",\n          onChange: _ref8 => {\n            let {\n              target\n            } = _ref8;\n            return setDateMinute(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateSecond\",\n          children: \"Second: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateSecond,\n          placeholder: \"enter the second: (SS)\",\n          onChange: _ref9 => {\n            let {\n              target\n            } = _ref9;\n            return setDateSecond(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--alt\",\n        type: \"submit\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn--alt\",\n      onClick: props.onCancel,\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EventMaker, \"3OH2eg4lDhrDzJ6iViA79gOsVMs=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = EventMaker;\nexport default EventMaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventMaker\");","map":{"version":3,"sources":["C:/Users/Alvin/OneDrive/Documents/CodeProjects/EventManagerReact/frontend/src/Component/Component2/EventMaker.js"],"names":["React","useState","useEffect","axios","useNavigate","url","useParams","EventMaker","props","navigate","clubID","title","setTitle","desc","setDesc","capacity","setCapacity","plannedDate","setPlannedDate","dateYear","setDateYear","dateMonth","setDateMonth","dateDay","setDateDay","dateHour","setDateHour","dateMinute","setDateMinute","dateSecond","setDateSecond","handleSubmit","e","preventDefault","post","user_id","JSON","parse","localStorage","getItem","club_id","description","event_capacity","planned_date","then","response","data","error","alert","catch","target","value","onCancel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {url} from '../../App';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction EventMaker(props){\r\n  let navigate = useNavigate();\r\n  let {clubID} = useParams();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [capacity, setCapacity] = useState(\"\");\r\n  const [plannedDate, setPlannedDate] = useState(\"\");\r\n  // used to help formate plannedDate\r\n  const [dateYear, setDateYear] = useState(\"\");\r\n  const [dateMonth, setDateMonth] = useState(\"\");\r\n  const [dateDay, setDateDay] = useState(\"\");\r\n  const [dateHour, setDateHour] = useState(\"\");\r\n  const [dateMinute, setDateMinute] = useState(\"\");\r\n  const [dateSecond, setDateSecond] = useState(\"\");\r\n\r\n  const handleSubmit = async e =>{\r\n    e.preventDefault();\r\n    setPlannedDate(dateYear+\"-\"+dateMonth+\"-\"+dateDay+\"T\"+dateHour+\":\"+dateMinute+\":\"+dateSecond);\r\n    axios.post(\"http://localhost:3001/clubs\", {\r\n      user_id: JSON.parse(localStorage.getItem(\"user\")),\r\n      club_id: clubID,\r\n      title: title,\r\n      description: desc,\r\n      event_capacity: capacity,\r\n      planned_date: plannedDate,\r\n    }).then ((response) => {\r\n      if (response.data.error == \"\") {\r\n        alert(\"Event \" + title + \" was successful!\");\r\n        navigate(\"/clubs/\" + clubID + \"/events\");\r\n      }\r\n      else (alert(\"Error: \" + response.data.error));\r\n    }).catch (error => {\r\n      alert(error);\r\n      navigate(\"/clubs/\" + clubID + \"/events\");\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div>\r\n        <p>Create Event for {clubID}</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Event Title: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            placeholder=\"enter the event title\"\r\n            onChange={({ target }) => setTitle(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n        <label htmlFor=\"eventDesc\">Event Description: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={desc}\r\n          placeholder=\"enter your event description\"\r\n          onChange={({ target }) => setDesc(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"capacity\">Capacity: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={capacity}\r\n            placeholder=\"enter the max capacity\"\r\n            onChange={({ target }) => setCapacity(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateCalendar\">Planned Calendar Date</label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateYear\">Year: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateYear}\r\n            placeholder=\"enter the year: (YYYY)\"\r\n            onChange={({ target }) => setDateYear(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateMonth\">Month: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateMonth}\r\n            placeholder=\"enter the month: (MM)\"\r\n            onChange={({ target }) => setDateMonth(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateDay\">Day: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateDay}\r\n            placeholder=\"enter the day: (DD)\"\r\n            onChange={({ target }) => setDateDay(target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"dateCalendar\">Planned Time Date</label>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateHour\">Hour: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateHour}\r\n            placeholder=\"enter the hour (use 24-hour system): (HH)\"\r\n            onChange={({ target }) => setDateHour(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateMinute\">Minute: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateMinute}\r\n            placeholder=\"enter the minute: (MM)\"\r\n            onChange={({ target }) => setDateMinute(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"dateSecond\">Second: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={dateSecond}\r\n            placeholder=\"enter the second: (SS)\"\r\n            onChange={({ target }) => setDateSecond(target.value)}\r\n          />\r\n        </div>\r\n        <button className='btn btn--alt' type =\"submit\">Enter</button>\r\n      </form>\r\n      <button className='btn btn--alt' onClick={props.onCancel}>Go Back</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventMaker;\r\n"]},"metadata":{},"sourceType":"module"}