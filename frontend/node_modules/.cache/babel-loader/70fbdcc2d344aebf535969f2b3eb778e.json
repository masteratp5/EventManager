{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alvin\\\\OneDrive\\\\Documents\\\\CodeProjects\\\\EventManagerReact\\\\frontend\\\\src\\\\Component\\\\Component2\\\\PromoteGenMember.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PromoteGenMember(props) {\n  _s();\n\n  let {\n    clubID\n  } = useParams();\n  const [userID, setUserID] = useState(\"\");\n  const [boardCode, setBoardCode] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    axios.put(url + \"/clubmembers\", {\n      params: {\n        user_id: userID,\n        club_id: clubID,\n        board_code: boardCode\n      }\n    }).then(response => {\n      if (response.data.error == \"\") {\n        alert(userID + \" was successfully promoted to a board member!\");\n        navigate(\"/home/clubs/:clubID\");\n      } else alert(\"Error: \" + response.data.error);\n    }).catch(error => {\n      alert(error);\n      navigate(-1);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Promote a General Member to Board Member\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userID\",\n        children: \"Enter the person's ID to promote: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: clubID,\n        placeholder: \"enter the person's ID\",\n        onChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return setUserID(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userID\",\n        children: [\"Enter the board code of \", clubID, \" for authroization: \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: boardCode,\n        placeholder: \"enter the board code\",\n        onChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return setBoardCode(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Promote Member\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn--alt\",\n      onClick: props.onCancel,\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PromoteGenMember, \"LZ2Smcp3mcbTrCOMjG0NdjtYKbg=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = PromoteGenMember;\nexport default PromoteGenMember;\n\nvar _c;\n\n$RefreshReg$(_c, \"PromoteGenMember\");","map":{"version":3,"sources":["C:/Users/Alvin/OneDrive/Documents/CodeProjects/EventManagerReact/frontend/src/Component/Component2/PromoteGenMember.js"],"names":["React","useState","useEffect","axios","useNavigate","useParams","PromoteGenMember","props","clubID","userID","setUserID","boardCode","setBoardCode","navigate","handleSubmit","e","preventDefault","put","url","params","user_id","club_id","board_code","then","response","data","error","alert","catch","target","value","onCancel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {useNavigate} from 'react-router-dom';\nimport {useParams} from \"react-router-dom\";\n\nfunction PromoteGenMember(props){\n  let {clubID} = useParams();\n  const [userID, setUserID] = useState(\"\");\n  const [boardCode, setBoardCode] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async e =>{\n    e.preventDefault();\n    axios.put(url+\"/clubmembers\", {\n      params:{\n        user_id: userID,\n        club_id: clubID,\n        board_code: boardCode\n      }\n    }).then((response) => {\n      if (response.data.error == \"\") {\n        alert(userID + \" was successfully promoted to a board member!\");\n        navigate(\"/home/clubs/:clubID\")\n      }\n      else alert(\"Error: \" + response.data.error);\n    }).catch(error => {\n      alert(error);\n      navigate(-1);\n    });\n  };\n\n  return (\n    <div className='modal'>\n      <div>\n        <p>Promote a General Member to Board Member</p>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"userID\">Enter the person's ID to promote: </label>\n        <input\n          type=\"text\"\n          value={clubID}\n          placeholder=\"enter the person's ID\"\n          onChange={({ target }) => setUserID(target.value)}\n        />\n        <label htmlFor=\"userID\">Enter the board code of {clubID} for authroization: </label>\n        <input\n          type=\"text\"\n          value={boardCode}\n          placeholder=\"enter the board code\"\n          onChange={({ target }) => setBoardCode(target.value)}\n        />\n        <button type =\"submit\">Promote Member</button>\n      </form>\n      <button className='btn btn--alt' onClick={props.onCancel}>Go Back</button>\n    </div>\n  );\n}\n\nexport default PromoteGenMember;\n"]},"metadata":{},"sourceType":"module"}