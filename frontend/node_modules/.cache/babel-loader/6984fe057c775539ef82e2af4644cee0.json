{"ast":null,"code":"var _jsxFileName = \"/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/Component2/AnnouncementMaker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { url } from '../../App';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AnnouncementMaker(props) {\n  _s();\n\n  let navigate = useNavigate();\n  let {\n    clubID\n  } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [capacity, setCapacity] = useState(\"\");\n  const [plannedDate, setPlannedDate] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setPlannedDate(dateYear + \"-\" + dateMonth + \"-\" + dateDay + \"T\" + dateHour + \":\" + dateMinute + \":\" + dateSecond);\n    const response = await axios.post(\"http://localhost:3001/clubs\", {\n      user_id: JSON.parse(localStorage.getItem(\"user\")),\n      club_id: clubID,\n      title: title,\n      description: desc,\n      event_capacity: capacity,\n      planned_date: plannedDate\n    }).then(response => {\n      if (response.error == \"\") {\n        alert(\"Event \" + title + \" was successful!\");\n        navigate(\"/clubs/\" + clubID + \"/events\");\n      } else alert(\"Error: \" + error);\n    }).catch(error => {\n      alert(error);\n      navigate(\"/clubs/\" + clubID + \"/events\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Create Event for \", clubID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Event Title: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          placeholder: \"enter the event title\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setTitle(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"eventDesc\",\n          children: \"Event Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: desc,\n          placeholder: \"enter your event description\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setDesc(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"capacity\",\n          children: \"Capacity: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: capacity,\n          placeholder: \"enter the max capacity\",\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setCapacity(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateCalendar\",\n          children: \"Planned Calendar Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateYear\",\n          children: \"Year: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateYear,\n          placeholder: \"enter the year: (YYYY)\",\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setDateYear(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateMonth\",\n          children: \"Month: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateMonth,\n          placeholder: \"enter the month: (MM)\",\n          onChange: _ref5 => {\n            let {\n              target\n            } = _ref5;\n            return setDateMonth(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateDay\",\n          children: \"Day: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateDay,\n          placeholder: \"enter the day: (DD)\",\n          onChange: _ref6 => {\n            let {\n              target\n            } = _ref6;\n            return setDateDay(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateCalendar\",\n          children: \"Planned Time Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateHour\",\n          children: \"Hour: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateHour,\n          placeholder: \"enter the hour (use 24-hour system): (HH)\",\n          onChange: _ref7 => {\n            let {\n              target\n            } = _ref7;\n            return setDateHour(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateMinute\",\n          children: \"Minute: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateMinute,\n          placeholder: \"enter the minute: (MM)\",\n          onChange: _ref8 => {\n            let {\n              target\n            } = _ref8;\n            return setDateMinute(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateSecond\",\n          children: \"Second: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: dateSecond,\n          placeholder: \"enter the second: (SS)\",\n          onChange: _ref9 => {\n            let {\n              target\n            } = _ref9;\n            return setDateSecond(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AnnouncementMaker, \"rhjAQNef0eTeoAsVVzly3QKLl/c=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = AnnouncementMaker;\nexport default AnnouncementMaker;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnnouncementMaker\");","map":{"version":3,"sources":["/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/Component2/AnnouncementMaker.js"],"names":["React","useState","useEffect","axios","useNavigate","url","useParams","AnnouncementMaker","props","navigate","clubID","title","setTitle","desc","setDesc","capacity","setCapacity","plannedDate","setPlannedDate","handleSubmit","e","preventDefault","dateYear","dateMonth","dateDay","dateHour","dateMinute","dateSecond","response","post","user_id","JSON","parse","localStorage","getItem","club_id","description","event_capacity","planned_date","then","error","alert","catch","target","value","setDateYear","setDateMonth","setDateDay","setDateHour","setDateMinute","setDateSecond"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {useNavigate} from 'react-router-dom';\nimport {url} from '../../App';\nimport {useParams} from \"react-router-dom\";\n\nfunction AnnouncementMaker(props){\n  let navigate = useNavigate();\n  let {clubID} = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [capacity, setCapacity] = useState(\"\");\n  const [plannedDate, setPlannedDate] = useState(\"\");\n\n  const handleSubmit = async e =>{\n    e.preventDefault();\n    setPlannedDate(dateYear+\"-\"+dateMonth+\"-\"+dateDay+\"T\"+dateHour+\":\"+dateMinute+\":\"+dateSecond);\n    const response = await axios.post(\"http://localhost:3001/clubs\", {\n      user_id: JSON.parse(localStorage.getItem(\"user\")),\n      club_id: clubID,\n      title: title,\n      description: desc,\n      event_capacity: capacity,\n      planned_date: plannedDate,\n    }).then (response => {\n      if (response.error == \"\") {\n        alert(\"Event \" + title + \" was successful!\");\n        navigate(\"/clubs/\" + clubID + \"/events\");\n      }\n      else (alert(\"Error: \" + error));\n    }).catch (error => {\n      alert(error);\n      navigate(\"/clubs/\" + clubID + \"/events\");\n    });\n  };\n\n\n  return (\n    <div className='modal'>\n      <div>\n        <p>Create Event for {clubID}</p>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Event Title: </label>\n          <input\n            type=\"text\"\n            value={title}\n            placeholder=\"enter the event title\"\n            onChange={({ target }) => setTitle(target.value)}\n            />\n        </div>\n        <div>\n        <label htmlFor=\"eventDesc\">Event Description: </label>\n        <input\n          type=\"text\"\n          value={desc}\n          placeholder=\"enter your event description\"\n          onChange={({ target }) => setDesc(target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"capacity\">Capacity: </label>\n          <input\n            type=\"text\"\n            value={capacity}\n            placeholder=\"enter the max capacity\"\n            onChange={({ target }) => setCapacity(target.value)}\n            />\n        </div>\n        <div>\n          <label htmlFor=\"dateCalendar\">Planned Calendar Date</label>\n        </div>\n        <div>\n          <label htmlFor=\"dateYear\">Year: </label>\n          <input\n            type=\"text\"\n            value={dateYear}\n            placeholder=\"enter the year: (YYYY)\"\n            onChange={({ target }) => setDateYear(target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"dateMonth\">Month: </label>\n          <input\n            type=\"text\"\n            value={dateMonth}\n            placeholder=\"enter the month: (MM)\"\n            onChange={({ target }) => setDateMonth(target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"dateDay\">Day: </label>\n          <input\n            type=\"text\"\n            value={dateDay}\n            placeholder=\"enter the day: (DD)\"\n            onChange={({ target }) => setDateDay(target.value)}\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"dateCalendar\">Planned Time Date</label>\n        </div>\n        <div>\n          <label htmlFor=\"dateHour\">Hour: </label>\n          <input\n            type=\"text\"\n            value={dateHour}\n            placeholder=\"enter the hour (use 24-hour system): (HH)\"\n            onChange={({ target }) => setDateHour(target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"dateMinute\">Minute: </label>\n          <input\n            type=\"text\"\n            value={dateMinute}\n            placeholder=\"enter the minute: (MM)\"\n            onChange={({ target }) => setDateMinute(target.value)}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"dateSecond\">Second: </label>\n          <input\n            type=\"text\"\n            value={dateSecond}\n            placeholder=\"enter the second: (SS)\"\n            onChange={({ target }) => setDateSecond(target.value)}\n          />\n        </div>\n\n        <button type =\"submit\">Enter</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AnnouncementMaker;\n"]},"metadata":{},"sourceType":"module"}