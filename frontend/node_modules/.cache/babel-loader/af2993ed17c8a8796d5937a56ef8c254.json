{"ast":null,"code":"var _jsxFileName = \"/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { url } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [fName, setFName] = useState(\"\");\n  const [lName, setLName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const navigate = useNavigate(); // send form to server to create account\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    axios.post(url + \"/users\", {\n      params: {\n        first_name: fName,\n        last_name: lName,\n        email: email,\n        password: pw\n      }\n    }).then(response => {\n      if (response.data.error == \"\") {\n        alert(\"Account Creation Successful!\");\n        navigate(\"/\");\n      } else {\n        alert(\"Error: \" + response.data.error);\n      }\n    }).catch(error => {\n      alert(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fn\",\n          children: \"First Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: fName,\n          placeholder: \"enter your first name\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setFName(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ln\",\n          children: \"Last Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: lName,\n          placeholder: \"enter your last name\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setLName(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          placeholder: \"enter your email\",\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setEmail(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pw\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: pw,\n          placeholder: \"enter a user password\",\n          onChange: _ref4 => {\n            let {\n              target\n            } = _ref4;\n            return setPw(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn--alt\",\n        type: \"submit\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn--alt\",\n      onClick: () => navigate(-1),\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"5eYMsJC+d2oqoUVDt/sbhyT0xLs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/alvinphan/Documents/AtomProjects/event-manager-react/src/Component/Register.js"],"names":["React","useState","useEffect","axios","useNavigate","url","Register","fName","setFName","lName","setLName","email","setEmail","pw","setPw","navigate","handleSubmit","e","preventDefault","post","params","first_name","last_name","password","then","response","data","error","alert","catch","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {url} from '../App';\r\n\r\nfunction Register(){\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pw, setPw] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // send form to server to create account\r\n  const handleSubmit = async e =>{\r\n    e.preventDefault();\r\n    axios.post(url + \"/users\", {\r\n      params: {\r\n        first_name: fName,\r\n        last_name: lName,\r\n        email: email,\r\n        password: pw\r\n      }\r\n\r\n    }).then( response => {\r\n      if(response.data.error == \"\"){\r\n        alert(\"Account Creation Successful!\");\r\n        navigate(\"/\");\r\n      }\r\n      else{\r\n        alert(\"Error: \" + response.data.error)\r\n      }\r\n    }).catch( error => {\r\n      alert(error)\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className='modal'>\r\n      <div>\r\n        <p>Create Account</p>\r\n      </div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"fn\">First Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={fName}\r\n            placeholder=\"enter your first name\"\r\n            onChange={({ target }) => setFName(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"ln\">Last Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={lName}\r\n            placeholder=\"enter your last name\"\r\n            onChange={({ target }) => setLName(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email </label>\r\n          <input\r\n            type=\"text\"\r\n            value={email}\r\n            placeholder=\"enter your email\"\r\n            onChange={({ target }) => setEmail(target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"pw\">Password: </label>\r\n          <input\r\n            type=\"text\"\r\n            value={pw}\r\n            placeholder=\"enter a user password\"\r\n            onChange={({ target }) => setPw(target.value)}\r\n            />\r\n        </div>\r\n        <button className='btn btn--alt' type =\"submit\">Enter</button>\r\n      </form>\r\n      <button className='btn btn--alt' onClick = {() => navigate(-1)}>Go Back</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}